{
	"info": {
		"_postman_id": "cc36cb62-0395-4f1c-9b0f-f61e47dc46f0",
		"name": "spring-boot-demo",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31564941"
	},
	"item": [
		{
			"name": "happy-path",
			"item": [
				{
					"name": "Save student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Student request was accepted with 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"pm.test(\"Store studentId\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.eql(null);",
									"    pm.environment.set(\"first_student_id\", jsonData);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstname\":\"{{$randomFirstName}}\",\n    \"lastname\": \"{{$randomLastName}}\",\n    \"age\":23\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/students",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find student by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Student exist 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"    pm.expect(jsonData['firstname']).to.not.eql(null);",
									"    pm.expect(jsonData['lastname']).to.not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/students/:studentId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"students",
								":studentId"
							],
							"variable": [
								{
									"key": "studentId",
									"value": "{{first_student_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "create new subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Student request was accepted with 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});",
									"",
									"pm.test(\"Store studentId\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.not.eql(null);",
									"    pm.environment.set(\"first_subject_id\", jsonData);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Math\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/subjects",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				},
				{
					"name": "find subject by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Student exist 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"    pm.expect(jsonData['name']).to.not.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/students/:subjectId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"students",
								":subjectId"
							],
							"variable": [
								{
									"key": "subjectId",
									"value": "{{first_subject_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign student to subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 202\", function () {",
									"    pm.response.to.have.status(202);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/subjects/:subjectId/student/:studentId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"subjects",
								":subjectId",
								"student",
								":studentId"
							],
							"variable": [
								{
									"key": "subjectId",
									"value": "{{first_subject_id}}"
								},
								{
									"key": "studentId",
									"value": "{{first_student_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "check assigned subject",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Student exist 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"    pm.expect(jsonData['nbrSubjects']).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/students/:studentId",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"students",
								":studentId"
							],
							"variable": [
								{
									"key": "studentId",
									"value": "{{first_student_id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "student_exceptional_path",
			"item": [
				{
					"name": "save empty student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should not be able to save an invalid student\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Should return 4 validation error & a message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData['validationErrors'].length).to.eql(4);",
									"    pm.expect(jsonData['errorMsg']).to.eql('Object not valid');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/students",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"students"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}